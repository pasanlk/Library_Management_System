@model LibraryManagementViewModel.BookReservationModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    body {
        background-image: url('../../Images/create.jpg');
        background-size: cover;
        background-repeat: no-repeat;
    }
</style>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>BookReservationModel</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*<div class="form-group">
        @Html.LabelFor(model => model.reservationId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.reservationId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.reservationId, "", new { @class = "text-danger" })
        </div>
    </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.readerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.readerId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.readerId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    @*<div class="form-group">
            @Html.LabelFor(model => model.isbnNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.isbnNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isbnNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@


    @*the staffId dropdown List*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.readerId, "Reader", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.readerId, (List<SelectListItem>)ViewBag.ReaderIdList, "Select Staff", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.readerId, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*Create Reader ids drop down menu*@
    <div class="form-group">
        @Html.LabelFor(model => model.readerId, "Reader", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.readerId, (IEnumerable<SelectListItem>)ViewBag.ReaderIdList, "Select Reader", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.readerId, "", new { @class = "text-danger" })
        </div>
    </div>



    @*The publisherId dropdown list*@
    @*<div class="form-group">
            @Html.LabelFor(model => model.isbnNumber, "Book", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.isbnNumber, (List<SelectListItem>)ViewBag.BookIsbnList, "Select Publisher", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.isbnNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@
    @*Create IsbnNumbers drop down menu*@
    <div class="form-group">
        @Html.LabelFor(model => model.isbnNumber, "Book", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.isbnNumber, (IEnumerable<SelectListItem>)ViewBag.BookIsbnList, "Select Book", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.isbnNumber, "", new { @class = "text-danger" })
        </div>
    </div>









    <div class="form-group">
        @Html.LabelFor(model => model.reserveDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.reserveDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.reserveDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.dueDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.dueDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.dueDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.returnDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.returnDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.returnDate, "", new { @class = "text-danger" })
        </div>
    </div>
    @*Fine calculated using date deferencess*@
    @*this isnt needed fine calculate automatically
        <div class="form-group">
            @Html.LabelFor(model => model.fine, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fine, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fine, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
